- name: Prepare
  hosts:
    - localhost
  gather_facts: false
  module_defaults:
    group/trippsc2.hashi_vault.vault:
      token: 47542cbc-6bf8-4fba-8eda-02e0a0d29a0a
      url: http://127.0.0.1:8200
  tasks:
    - name: Create intermediate PKI secret engine
      trippsc2.hashi_vault.vault_pki_secret_engine:
        engine_mount_point: pki_int
        max_lease_ttl: 15768000
        default_lease_ttl: 15768000
        state: present

    - name: Create signing CA private key
      community.crypto.openssl_privatekey_pipe:
        type: RSA
        size: 4096
      register: _signing_ca_key

    - name: Create signing CA CSR
      community.crypto.openssl_csr_pipe:
        privatekey_content: "{{ _signing_ca_key.privatekey }}"
        common_name: RootCA
        basic_constraints:
          - 'CA:TRUE'
          - 'pathlen:1'
        basic_constraints_critical: true
        key_usage:
          - cRLSign
          - keyCertSign
        key_usage_critical: true
      register: _signing_ca_csr

    - name: Sign signing CA certificate
      community.crypto.x509_certificate:
        csr_content: "{{ _signing_ca_csr.csr }}"
        path: "{{ lookup('env', 'MOLECULE_EPHEMERAL_DIRECTORY') }}/signing_ca.crt"
        privatekey_content: "{{ _signing_ca_key.privatekey }}"
        provider: selfsigned

    - name: Create PKI Intermediate CA Certificate CSR
      trippsc2.hashi_vault.vault_pki_generate_intermediate_csr:
        engine_mount_point: pki_int
        common_name: Intermediate CA
        type: internal
        alt_names:
          - test1.test.loc
          - test2.test.loc
        ip_sans:
          - '192.0.2.1'
          - '192.0.2.2'
        uri_sans:
          - 'http://test1.test.loc'
          - 'http://test2.test.loc'
        other_sans:
          - oid: '1.3.6.1.4.1.311.20.2.3'
            value: test1@test.loc
          - oid: '1.3.6.1.4.1.311.20.2.3'
            value: test2@test.loc
        format: pem_bundle
        private_key_format: der
        key_type: rsa
        key_bits: 4096
        exclude_cn_from_sans: true
        ou:
          - Test
          - Test2
        organization:
          - Test
          - Test2
        country:
          - US
          - CA
        locality:
          - Los Angeles
          - Toronto
        province:
          - California
          - Ontario
        street_address:
          - '1234 Test St'
          - '5678 Test St'
        postal_code:
          - '90001'
          - 'M1A 1A1'
        serial_number: '1'
        add_basic_constraints: true
        key_usage:
          - DigitalSignature
          - CertSign
          - CRLSign
      register: _intermediate_ca_csr

    - name: Sign intermediate CA certificate
      community.crypto.x509_certificate_pipe:
        csr_content: "{{ _intermediate_ca_csr.csr }}"
        provider: ownca
        ownca_path: "{{ lookup('env', 'MOLECULE_EPHEMERAL_DIRECTORY') }}/signing_ca.crt"
        ownca_privatekey_content: "{{ _signing_ca_key.privatekey }}"
      register: _intermediate_ca_cert

    - name: Write intermediate CA certificate to file
      ansible.builtin.copy:
        content: "{{ _intermediate_ca_cert.certificate }}"
        dest: "{{ lookup('env', 'MOLECULE_EPHEMERAL_DIRECTORY') }}/intermediate_ca.crt"
        owner: "{{ lookup('env', 'USER') }}"
        group: "{{ lookup('env', 'USER') }}"
        mode: '0600'
