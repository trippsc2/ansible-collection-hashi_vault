---
- name: Verify
  hosts:
    - subjects
  become: true
  tasks:
  - name: Set path variables (Debian-based)
    when:
      - ansible_os_family == 'Debian'
    ansible.builtin.set_fact:
      _ca_chain_path: /usr/local/share/ca-certificates/ca_chain.crt
      _certificate_path: /etc/ssl/certs/cert.crt
      _private_key_path: /etc/ssl/private/cert.key

  - name: Set path variables (EL)
    when:
      - ansible_os_family == 'RedHat'
    ansible.builtin.set_fact:
      _ca_chain_path: /etc/pki/ca-trust/source/anchors/ca_chain.crt
      _certificate_path: /etc/pki/tls/certs/cert.crt
      _private_key_path: /etc/pki/tls/private/cert.key

  - name: Get private key file info
    ansible.builtin.stat:
      path: "{{ _private_key_path }}"
    register: _private_key_info

  - name: Get certificate file info
    ansible.builtin.stat:
      path: "{{ _certificate_path }}"
    register: _certificate_info

  - name: Get CA chain file info
    ansible.builtin.stat:
      path: "{{ _ca_chain_path }}"
    register: _ca_chain_info

  - name: Get CSR file info
    ansible.builtin.stat:
      path: /tmp/cert.csr
    register: _csr_info

  - name: Verify that private key exists
    ansible.builtin.assert:
      that:
        - _private_key_info.stat.exists
      fail_msg: Private key does not exist.
      success_msg: Private key exists.

  - name: Verify private key owner
    ansible.builtin.assert:
      that:
        - _private_key_info.stat.pw_name == cert_private_key_owner | default('root')
      fail_msg: Private key does not have expected owner.
      success_msg: Private key has expected owner.

  - name: Verify private key group
    ansible.builtin.assert:
      that:
        - _private_key_info.stat.gr_name == cert_private_key_group | default('root')
      fail_msg: Private key does not have expected group.
      success_msg: Private key has expected group.

  - name: Verify private key mode
    ansible.builtin.assert:
      that:
        - _private_key_info.stat.mode == cert_private_key_mode | default('0600')
      fail_msg: Private key does not have expected mode.
      success_msg: Private key has expected mode.

  - name: Verify that certificate exists
    ansible.builtin.assert:
      that:
        - _certificate_info.stat.exists
      fail_msg: Certificate does not exist.
      success_msg: Certificate exists.

  - name: Verify certificate owner
    ansible.builtin.assert:
      that:
        - _certificate_info.stat.pw_name == cert_certificate_owner | default('root')
      fail_msg: Certificate does not have expected owner.
      success_msg: Certificate has expected owner.

  - name: Verify certificate group
    ansible.builtin.assert:
      that:
        - _certificate_info.stat.gr_name == cert_certificate_group | default('root')
      fail_msg: Certificate does not have expected group.
      success_msg: Certificate has expected group.

  - name: Verify certificate mode
    ansible.builtin.assert:
      that:
        - _certificate_info.stat.mode == cert_certificate_mode | default('0644')
      fail_msg: Certificate does not have expected mode.
      success_msg: Certificate has expected mode.

  - name: Verify that CA chain exists
    ansible.builtin.assert:
      that:
        - _ca_chain_info.stat.exists
      fail_msg: CA chain does not exist.
      success_msg: CA chain exists.
  
  - name: Verify that CA chain has expected owner
    ansible.builtin.assert:
      that:
        - _ca_chain_info.stat.pw_name == cert_ca_chain_owner | default('root')
      fail_msg: CA chain does not have expected owner.
      success_msg: CA chain has expected owner.
  
  - name: Verify that CA chain has expected group
    ansible.builtin.assert:
      that:
        - _ca_chain_info.stat.gr_name == cert_ca_chain_group | default('root')
      fail_msg: CA chain does not have expected group.
      success_msg: CA chain has expected group.

  - name: Verify that CA chain has expected mode
    ansible.builtin.assert:
      that:
        - _ca_chain_info.stat.mode == cert_ca_chain_mode | default('0644')
      fail_msg: CA chain does not have expected mode.
      success_msg: CA chain has expected mode.

  - name: Verify that CSR does not exist
    ansible.builtin.assert:
      that:
        - not _csr_info.stat.exists
      fail_msg: CSR was not deleted.
      success_msg: CSR was deleted as expected.
