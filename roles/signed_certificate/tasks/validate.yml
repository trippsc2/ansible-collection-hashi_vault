---
- name: Include OS family variables
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"

- name: Validate certificate owner user exists
  when:
    - ansible_os_family != 'Windows'
  ansible.builtin.assert:
    that:
      - cert_certificate_owner in getent_passwd.keys()
    fail_msg: "User '{{ cert_certificate_owner }}' does not exist."
    success_msg: "User '{{ cert_certificate_owner }}' exists."

- name: Validate certificate group exists
  when:
    - ansible_os_family != 'Windows'
  ansible.builtin.assert:
    that:
      - cert_certificate_group in getent_group.keys()
    fail_msg: "Group '{{ cert_certificate_group }}' does not exist."
    success_msg: "Group '{{ cert_certificate_group }}' exists."

- name: Validate CA chain owner user exists
  when:
    - cert_copy_ca_chain
    - ansible_os_family != 'Windows'
  ansible.builtin.assert:
    that:
      - cert_ca_chain_owner in getent_passwd.keys()
    fail_msg: "User '{{ cert_ca_chain_owner }}' does not exist."
    success_msg: "User '{{ cert_ca_chain_owner }}' exists."

- name: Validate CA chain group exists
  when:
    - cert_copy_ca_chain
    - ansible_os_family != 'Windows'
  ansible.builtin.assert:
    that:
      - cert_ca_chain_group in getent_group.keys()
    fail_msg: "Group '{{ cert_ca_chain_group }}' does not exist."
    success_msg: "Group '{{ cert_ca_chain_group }}' exists."
