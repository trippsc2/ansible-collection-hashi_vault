DOCUMENTATION:
  module: vault_pki_sign_verbatim
  version_added: 1.2.0
  author:
    - Jim Tarpley (@trippsc2)
  short_description: Signs a certificate signing request verbatim in HashiCorp Vault
  description:
    - L(Signs a certificate signing request \(CSR\) verbatim,https://hvac.readthedocs.io/en/stable/usage/secrets_engines/pki.html#sign-verbatim)
      in HashiCorp Vault.
    - This module is not idempotent.
  attributes:
    check_mode:
      support: none
      description:
        - Does not support check mode.
  extends_documentation_fragment:
    - trippsc2.hashi_vault.auth
    - trippsc2.hashi_vault.connection
    - trippsc2.hashi_vault.engine_mount
    - trippsc2.hashi_vault.requirements
  options:
    role_name:
      type: str
      required: true
      description:
        - The name of the role to use when signing the certificate signing request (CSR).
    csr:
      type: str
      required: true
      description:
        - The certificate signing request (CSR) to sign.
    key_usage:
      type: list
      required: false
      elements: str
      choices:
        - DigitalSignature
        - ContentCommitment
        - KeyEncipherment
        - DataEncipherment
        - KeyAgreement
        - CertSign
        - CRLSign
        - EncipherOnly
        - DecipherOnly
      description:
        - The key usage of the signed certificate.
        - If not provided, Vault defaults to providing V(DigitalSignature), V(KeyEncipherment), and V(KeyAgreement) key usages.
    ext_key_usage:
      type: list
      required: false
      elements: str
      choices:
        - ServerAuth
        - ClientAuth
        - CodeSigning
        - EmailProtection
        - IPSECEndSystem
        - IPSECTunnel
        - IPSECUser
        - TimeStamping
        - OCSPSigning
        - MicrosoftServerGatedCrypto
        - NetscapeServerGatedCrypto
        - MicrosoftCommercialCodeSigning
        - MicrosoftKernelCodeSigning
      description:
        - The extended key usage of the signed certificate.
        - If not provided, no extended key usage will be included.
    enforce_leaf_not_after_behavior:
      type: bool
      required: false
      description:
        - Whether to enforce the leaf certificate NotAfter field behavior.
        - If not provided, this defaults to not enforcing the leaf certificate NotAfter field behavior.
    ttl:
      type: str
      required: false
      description:
        - The expiration duration of the signed certificate.
        - This value can be provided as a duration string, such as V(72h), or as an number of seconds.
        - If not provided, this defaults to the C(default_lease_ttl) value of the role.
    format:
      type: str
      required: false
      default: pem
      choices:
        - pem
        - der
        - pem_bundle
      description:
        - The format of the signed certificate.      
    not_after:
      type: str
      required: false
      description:
        - The latest date and time at which the signed certificate is valid.
        - This value is a UTC timestamp in C(YYYY-MM-ddTHH:MM:SSZ) format.
        - If not provided, this defaults to the C(not_after) value on the role.
    signature_bits:
      type: int
      required: false
      choices:
        - 256
        - 384
        - 512
      description:
        - The signature algorithm bit length for the signed certificates.
        - Should only be provided when CSR has a private key using the RSA algorithm.
        - If not provided, this defaults to the C(signature_bits) on the role.
    uss_pss:
      type: bool
      required: false
      description:
        - Whether to use the Probabilistic Signature Scheme (PSS) for RSA keys.
        - Should only be provided when CSR has a private key using the RSA algorithm.
        - If not provided, this defaults to the C(use_pss) on the role.
    remove_roots_from_chain:
      type: bool
      required: false
      description:
        - Whether to remove the root certificates from the chain.
        - If not provided, this defaults to not removing the root certificates from the chain.
    user_ids:
      type: list
      required: false
      elements: str
      description:
        - The list of user IDs (OID 0.9.2342.19200300.100.1.1) to include in the signed certificate.
        - If not provided, no user IDs will be included.
EXAMPLES: |
  - name: Sign a certificate signing request (CSR) verbatim
    trippsc2.hashi_vault.vault_pki_sign_verbatim:
      url: https://vault:8201
      auth_method: userpass
      username: '{{ user }}'
      password: '{{ passwd }}'
      engine_mount_point: pki
      role_name: my-role
      csr: '{{ lookup("file", "csr.pem") }}'

RETURN:
  certificate:
    type: str
    returned: success
    description:
      - The signed certificate.
  issuing_ca:
    type: str
    returned: success
    description:
      - The issuing certificate authority (CA).
  ca_chain:
    type: list
    elements: str
    returned: success
    description:
      - The certificate chain.
  serial_number:
    type: str
    returned: success
    description:
      - The serial number of the signed certificate.
