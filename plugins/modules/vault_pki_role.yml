---
DOCUMENTATION:
  module: vault_pki_role
  version_added: 1.2.0
  author:
    - Jim Tarpley (@trippsc2)
  short_description: Configures a PKI secret engine role in HashiCorp Vault
  description:
    - Ensures a L(PKI secret engine role,https://hvac.readthedocs.io/en/stable/usage/secrets_engines/pki.html#create-update-role)
      is configured as expected in HashiCorp Vault.
  extends_documentation_fragment:
    - trippsc2.hashi_vault.attributes
    - trippsc2.hashi_vault.auth
    - trippsc2.hashi_vault.connection
    - trippsc2.hashi_vault.engine_mount
    - trippsc2.hashi_vault.requirements
  options:
    name:
      type: str
      required: true
      description:
        - The name of the role to manage.
    state:
      type: str
      default: present
      choices:
        - present
        - absent
      description:
        - Whether the role should be present or absent.
    ttl:
      type: str
      required: false
      description:
        - The default expiration period for issued certificates from this role.
        - This value can be provided as a duration string, such as V(72h), or as an number of seconds.
        - If not provided, this defaults to the shorter of the secret engine V(default_lease_ttl) value
          and the O(max_ttl) value on new roles.
    max_ttl:
      type: str
      required: false
      description:
        - The maximum expiration period for issued certificates from this role.
        - This value can be provided as a duration string, such as V(72h), or as an number of seconds.
        - If not provided, this defaults to the secret engine V(max_lease_ttl) value on new roles.
    allow_localhost:
      type: bool
      required: false
      description:
        - Whether clients can request certificates for V(localhost) as one of the requested common names.
        - If not provided, this defaults to V(true) on new roles.
    allowed_domains:
      type: list
      required: false
      elements: str
      description:
        - The domains for which this role can issue certificates.
        - Only used when O(allow_bare_domains=true) or O(allow_subdomains=true).
        - If not provided, this defaults to an empty list on new roles.
    allowed_domains_template:
      type: bool
      required: false
      description:
        - Whether the O(allowed_domains) list can include templates.
        - If not provided, this defaults to V(false) on new roles.
    allow_bare_domains:
      type: bool
      required: false
      description:
        - Whether clients can request certificates matching the value of the actual domains themselves.
        - For example, if O(allowed_domains) includes V(example.com) and O(allow_bare_domains=true), 
          the name V(example.com) is an allowed name.
        - In some scenarios, this can be considered a security risk.
        - If not provided, this defaults to V(false) on new roles.
    allow_subdomains:
      type: bool
      required: false
      description:
        - Whether clients can request certificates with CNs that are subdomains of the CNs allowed by
          the other role options. This includes wildcard subdomains.
        - For example, if O(allowed_domains) includes V(example.com) and O(allow_subdomains=true),
          V(foo.example.com), V(bar.example.com), and V(*.example.com) are allowed names.
        - Redundant when O(allow_any_name=true).
        - If not provided, this defaults to V(false) on new roles.
    allow_glob_domains:
      type: bool
      required: false
      description:
        - Allows names specified in O(allowed_domains) to contain glob patterns (e.g. V(ftp*.example.com))
        - Clients will be allowed to request certificates with names matching the glob patterns.
        - If not provided, this defaults to V(false) on new roles.
    allow_wildcard_certificates:
      type: bool
      required: false
      description:
        - Whether clients can request wildcard certificates.
        - If not provided, this defaults to V(true) on new roles.
    allow_any_name:
      type: bool
      required: false
      description:
        - Whether clients can request a certificate CN that is not in the O(allowed_domains) list.
        - If not provided, this defaults to V(false) on new roles.
    enforce_hostnames:
      type: bool
      required: false
      description:
        - Whether only valid host names are allowed for CNs, DNS SANs, and the host part of email
          addresses.
        - If not provided, this defaults to V(true) on new roles.
    allow_ip_sans:
      type: bool
      required: false
      description:
        - Whether clients can request IP Subject Alternative Names (SANs).
        - No authorization checking is performed except to verify that the given values are valid IP
          addresses.
        - If not provided, this defaults to V(true) on new roles.
    allowed_uri_sans:
      type: list
      required: false
      elements: str
      description:
        - The list of allowed URI Subject Alternative Names (SANs).
        - No authorization checking is performed except to verify that the given values are valid URIs.
        - Values can contain glob patterns (e.g. V(spiffe://hostname/*)).
        - If not provided, this defaults to an empty list on new roles.
    allowed_uri_sans_template:
      type: bool
      required: false
      description:
        - Whether the O(allowed_uri_sans) list can use templates.
        - If not provided, this defaults to V(false) on new roles.
    allowed_other_sans:
      type: list
      required: false
      elements: str
      description:
        - Defines allowed custom OID/UTF8-string SANs
        - This can be a comma-delimited list or a JSON string slice, where each element has the same format
          as OpenSSL V(<oid>;<type>:<value>), but the only valid type is V(UTF8) or V(UTF-8).
        - The V(value) part of an element may be a V(*) to allow any value with that OID.
        - Alternatively, specifying a single V(*) will allow any other_sans input.
        - If not provided, this defaults to an empty list on new roles.
    server_flag:
      type: bool
      required: false
      description:
        - Whether certificates issued are flagged for server use.
        - If not provided, this defaults to V(true) on new roles.
    client_flag:
      type: bool
      required: false
      description:
        - Whether certificates issued are flagged for client use.
        - If not provided, this defaults to V(true) on new roles.
    code_signing_flag:
      type: bool
      required: false
      description:
        - Whether certificates issued are flagged for code signing use.
        - If not provided, this defaults to V(false) on new roles.
    email_protection_flag:
      type: bool
      required: false
      description:
        - Whether certificates issued are flagged for email protection use.
        - If not provided, this defaults to V(false) on new roles.
    key_type:
      type: str
      required: false
      choices:
        - rsa
        - ec
        - any
      description:
        - The type of key to generate for generated private keys and the type of key expected for
          submitted certificate signing requests (CSRs).
        - Currently, V(rsa) and V(ec) are supported, or when signing CSRs V(any) can be specified to
          allow keys of either type and with any bit size (subject to > 1024 bits for RSA keys).
        - If not provided, this defaults to V(rsa) on new roles.
    key_bits:
      type: int
      required: false
      choices:
        - 224
        - 256
        - 384
        - 521
        - 2048
        - 3072
        - 4096
        - 8192
      description:
        - The number of bits to use for generated keys.
        - If O(key_type=rsa), the allowed values are V(2048), V(3072), V(4096), and V(8192).
        - If not provided and O(key_type=rsa), this defaults to V(2048) on new roles.
        - If O(key_type=ec), the allowed values are V(224), V(256), V(384), and V(521).
        - If not provided and O(key_type=ec), this defaults to V(256) on new roles.
        - If O(key_type=any), this should not be provided.
    signature_bits:
      type: int
      required: false
      choices:
        - 256
        - 384
        - 512
      description:
        - The signature algorithm bit length for the signed certificates.
        - Should only be provided when O(key_type=rsa).
        - If not provided, this defaults to V(256) on new roles.
    use_pss:
      type: bool
      required: false
      description:
        - Whether to use the Probabilistic Signature Scheme (PSS) for RSA keys.
        - Should only be provided when O(key_type=rsa).
        - If not provided, this defaults to V(false) on new roles.
    key_usage:
      type: list
      required: false
      elements: str
      choices:
        - DigitalSignature
        - ContentCommitment
        - KeyEncipherment
        - DataEncipherment
        - KeyAgreement
        - CertSign
        - CRLSign
        - EncipherOnly
        - DecipherOnly
      description:
        - The list of allowed key usage constraints on issued certificates.
        - To specify no key usage constraints, the value must be set to an empty list.
        - If not provided, this defaults to V(DigitalSignature), V(KeyAgreement), and V(KeyEncipherment) on new
          roles.
    ext_key_usage:
      type: list
      required: false
      elements: str
      choices:
        - ServerAuth
        - ClientAuth
        - CodeSigning
        - EmailProtection
        - IPSECEndSystem
        - IPSECTunnel
        - IPSECUser
        - TimeStamping
        - OCSPSigning
        - MicrosoftServerGatedCrypto
        - NetscapeServerGatedCrypto
        - MicrosoftCommercialCodeSigning
        - MicrosoftKernelCodeSigning
      description:
        - The list of allowed extended key usage constraints on issued certificates.
        - To specify no extended key usage constraints, set this to an empty list.
        - If not provided, this defaults to an empty list on new roles.
    ext_key_usage_oids:
      type: list
      required: false
      elements: str
      description:
        - The list of extended key usage oids.
        - If not provided, this defaults to an empty list on new roles.
    use_csr_common_name:
      type: bool
      required: false
      description:
        - Whether the CSR common name is used, when signing a CSR.
        - This has no effect when generating a certificate without a CSR.
        - If not provided, this defaults to V(true) on new roles.
    use_csr_sans:
      type: bool
      required: false
      description:
        - Whether the CSR Subject Alternative Names (SANs) are used, when signing a CSR.
        - This has no effect when generating a certificate without a CSR.
        - If not provided, this defaults to V(true) on new roles.
    ou:
      type: list
      required: false
      elements: str
      description:
        - The Organizational Unit (OU) values to include in issued/signed certificates.
        - If not provided, this defaults to an empty list on new roles.
    organization:
      type: list
      required: false
      elements: str
      description:
        - The Organization (O) values to include in issued/signed certificates.
        - If not provided, this defaults to an empty list on new roles.
    country:
      type: list
      required: false
      elements: str
      description:
        - The Country (C) values to include in issued/signed certificates.
        - If not provided, this defaults to an empty list on new roles.
    locality:
      type: list
      required: false
      elements: str
      description:
        - The Locality (L) values to include in issued/signed certificates.
        - If not provided, this defaults to an empty list on new roles.
    province:
      type: list
      required: false
      elements: str
      description:
        - The Province or State (ST) values to include in issued/signed certificates.
        - If not provided, this defaults to an empty list on new roles.
    street_address:
      type: list
      required: false
      elements: str
      description:
        - The Street Address values to include in issued/signed certificates.
        - If not provided, this defaults to an empty list on new roles.
    postal_code:
      type: list
      required: false
      elements: str
      description:
        - The Postal Code values to include in issued/signed certificates.
        - If not provided, this defaults to an empty list on new roles.
    generate_lease:
      type: bool
      required: false
      description:
        - Whether certificates issued/signed against this role will have Vault leases attached to them.
        - A lease is required to revoke a certificate and add it to the Certificate Revocation List
          (CRL) from the command line or GUI.
        - A lease is not required to revoke a certificate using the C(pki/revoke) API endpoint.
        - If not provided, this defaults to V(false) on new roles.
    no_store:
      type: bool
      required: false
      description:
        - Whether certificates issued/signed against this role should be stored in the storage backend.
        - This can improve performance when issuing large numbers of certificates.
        - However, certificates issued in this way cannot be enumerated or revoked, so this option is
          recommended only for certificates that are non-sensitive, or extremely short-lived.
        - If this is set to V(false), O(generate_lease=true) will not be effective.
        - If not provided, this defaults to V(false) on new roles.
    require_cn:
      type: bool
      required: false
      description:
        - Whether certificate signing requests (CSRs) must include a common name (CN).
        - If not provided, this defaults to V(true) on new roles.
    policy_identifiers:
      type: list
      required: false
      elements: str
      description:
          - The list of policy OIDs.
          - If not provided, this defaults to an empty list on new roles.
    basic_constraints_valid_for_non_ca:
      type: bool
      required: false
      description:
        - Whether to mark Basic Constraints valid when issuing non-CA certificates.
        - If not provided, this defaults to V(false) on new roles.
    not_before_duration:
      type: str
      required: false
      description:
        - The duration by which to backdate the NotBefore property.
        - This value can be provided as a duration string, such as V(72h), or as an number of seconds.
        - If not provided, this defaults to V(30s) on new roles.
    not_after:
      type: str
      required: false
      description:
        - The latest value of the NotAfter field on issued certificates.
        - This must be in UTC C(YYYY-MM-ddTHH:MM:SSZ) format.
        - If set to an empty string, no limit will be set on issued certificates.
        - If not provided, this defaults to an empty string on new roles.
    allowed_user_ids:
      type: list
      required: false
      elements: str
      description:
        - The list of allowed user IDs.
        - If not provided, this defaults to an empty list on new roles.
EXAMPLES: |
  - name: Creates a PKI role
    trippsc2.hashi_vault.vault_pki_role:
      url: https://vault:8201
      auth_method: userpass
      username: '{{ user }}'
      password: '{{ passwd }}'
      engine_mount_point: pki
      name: my-role
      state: present

  - name: Remove a PKI role
    trippsc2.hashi_vault.vault_pki_role:
      url: https://vault:8201
      auth_method: userpass
      username: '{{ user }}'
      password: '{{ passwd }}'
      engine_mount_point: pki
      name: my-role
      state: absent

RETURN:
  config:
    type: dict
    returned: O(state=present)
    description:
      - The configuration of the PKI role.
    sample:
      ttl: 0
      max_ttl: 0
      allow_localhost: true
      allowed_domains: []
      allowed_domains_template: false
      allow_bare_domains: false
      allow_subdomains: false
      allow_glob_domains: false
      allow_wildcard_certificates: true
      allow_any_name: false
      enforce_hostnames: true
      allow_ip_sans: true
      allowed_uri_sans: []
      allowed_uri_sans_template: false
      allowed_other_sans: []
      server_flag: true
      client_flag: true
      code_signing_flag: false
      email_protection_flag: false
      key_type: rsa
      key_bits: 2048
      signature_bits: 256
      use_pss: false
      key_usage:
        - DigitalSignature
        - KeyAgreement
        - KeyEncipherment
      ext_key_usage: []
      ext_key_usage_oids: []
      use_csr_common_name: true
      use_csr_sans: true
      ou: []
      organization: []
      country: []
      locality: []
      province: []
      street_address: []
      postal_code: []
      generate_lease: false
      no_store: false
      require_cn: true
      policy_identifiers: []
      basic_constraints_valid_for_non_ca: false
      not_before_duration: 30
      not_after: ''
      allowed_user_ids: []
    contains:
      ttl:
        type: str
        description:
          - The default expiration period for issued certificates from this role.
      max_ttl:
        type: str
        description:
        - The maximum expiration period for issued certificates from this role.
      allow_localhost:
        type: bool
        description:
        - Whether clients can request certificates for V(localhost) as one of the requested common names.
      allowed_domains:
        type: list
        elements: str
        description:
          - The domains for which this role can issue certificates.
      allowed_domains_template:
        type: bool
        description:
          - Whether the O(allowed_domains) list can include templates.
      allow_bare_domains:
        type: bool
        description:
          - Whether clients can request certificates matching the value of the actual domains themselves.
      allow_subdomains:
        type: bool
        description:
          - Whether clients can request certificates with CNs that are subdomains of the CNs allowed by
            the other role options. This includes wildcard subdomains.
      allow_glob_domains:
        type: bool
        description:
          - Allows names specified in O(allowed_domains) to contain glob patterns (e.g. V(ftp*.example.com))
      allow_wildcard_certificates:
        type: bool
        description:
          - Whether clients can request wildcard certificates.
      allow_any_name:
        type: bool
        description:
          - Whether clients can request a certificate CN that is not in the O(allowed_domains) list.
      enforce_hostnames:
        type: bool
        description:
          - Whether only valid host names are allowed for CNs, DNS SANs, and the host part of email
            addresses.
      allow_ip_sans:
        type: bool
        description:
          - Whether clients can request IP Subject Alternative Names (SANs).
      allowed_uri_sans:
        type: list
        elements: str
        description:
          - The list of allowed URI Subject Alternative Names (SANs).
      allowed_uri_sans_template:
        type: bool
        description:
          - Whether the O(allowed_uri_sans) list can use templates.
      allowed_other_sans:
        type: list
        elements: str
        description:
          - Defines allowed custom OID/UTF8-string SANs
      server_flag:
        type: bool
        description:
          - Whether certificates issued are flagged for server use.
      client_flag:
        type: bool
        description:
          - Whether certificates issued are flagged for client use.
      code_signing_flag:
        type: bool
        description:
          - Whether certificates issued are flagged for code signing use.
      email_protection_flag:
        type: bool
        description:
          - Whether certificates issued are flagged for email protection use.
      key_type:
        type: str
        description:
          - The type of key to generate for generated private keys and the type of key expected for
            submitted CSRs.
      key_bits:
        type: int
        description:
          - The number of bits to use for generated keys.
      signature_bits:
        type: int
        description:
          - The signature algorithm bit length for the signed certificates.
      use_pss:
        type: bool
        description:
          - Whether to use the Probabilistic Signature Scheme (PSS) for RSA keys.
      key_usage:
        type: list
        elements: str
        description:
          - The list of allowed key usage constraints on issued certificates.
      ext_key_usage:
        type: list
        elements: str
        description:
          - The list of allowed extended key usage constraints on issued certificates.
      ext_key_usage_oids:
        type: list
        elements: str
        description:
          - The list of extended key usage oids.
      use_csr_common_name:
        type: bool
        description:
          - Whether the CSR common name is used, when signing a CSR.
      use_csr_sans:
        type: bool
        description:
          - Whether the CSR Subject Alternative Names (SANs) are used, when signing a CSR.
      ou:
        type: list
        elements: str
        description:
          - The Organizational Unit (OU) values to include in issued/signed certificates.
      organization:
        type: list
        elements: str
        description:
          - The Organization (O) values to include in issued/signed certificates.
      country:
        type: list
        elements: str
        description:
          - The Country (C) values to include in issued/signed certificates.
      locality:
        type: list
        elements: str
        description:
          - The Locality (L) values to include in issued/signed certificates.
      province:
        type: list
        elements: str
        description:
          - The Province or State (ST) values to include in issued/signed certificates.
      street_address:
        type: list
        elements: str
        description:
          - The Street Address values to include in issued/signed certificates.
      postal_code:
        type: list
        elements: str
        description:
          - The Postal Code values to include in issued/signed certificates.
      generate_lease:
        type: bool
        description:
          - Whether certificates issued/signed against this role will have Vault leases attached to them.
      no_store:
        type: bool
        description:
          - Whether certificates issued/signed against this role should be stored in the storage backend.
      require_cn:
        type: bool
        description:
          - Whether certificate signing requests (CSRs) must include a common name (CN).
      policy_identifiers:
        type: list
        elements: str
        description:
          - The list of policy OIDs.
      basic_constraints_valid_for_non_ca:
        type: bool
        description:
          - Whether to mark Basic Constraints valid when issuing non-CA certificates.
      not_before_duration:
        type: str
        description:
          - The duration by which to backdate the NotBefore property.
      not_after:
        type: str
        description:
          - This must be in UTC C(YYYY-MM-ddTHH:MM:SSZ) format.
      allowed_user_ids:
        type: list
        elements: str
        description:
          - The list of allowed user IDs.
  prev_config:
    type: dict
    returned: changed
    description:
      - The configuration of the PKI role.
    sample:
      ttl: 0
      max_ttl: 0
      allow_localhost: true
      allowed_domains: []
      allowed_domains_template: false
      allow_bare_domains: false
      allow_subdomains: false
      allow_glob_domains: false
      allow_wildcard_certificates: true
      allow_any_name: false
      enforce_hostnames: true
      allow_ip_sans: true
      allowed_uri_sans: []
      allowed_uri_sans_template: false
      allowed_other_sans: []
      server_flag: true
      client_flag: true
      code_signing_flag: false
      email_protection_flag: false
      key_type: rsa
      key_bits: 2048
      signature_bits: 256
      use_pss: false
      key_usage:
        - DigitalSignature
        - KeyAgreement
        - KeyEncipherment
      ext_key_usage: []
      ext_key_usage_oids: []
      use_csr_common_name: true
      use_csr_sans: true
      ou: []
      organization: []
      country: []
      locality: []
      province: []
      street_address: []
      postal_code: []
      generate_lease: false
      no_store: false
      require_cn: true
      policy_identifiers: []
      basic_constraints_valid_for_non_ca: false
      not_before_duration: 30
      not_after: ''
      allowed_user_ids: []
    contains:
      ttl:
        type: str
        description:
          - The default expiration period for issued certificates from this role.
      max_ttl:
        type: str
        description:
        - The maximum expiration period for issued certificates from this role.
      allow_localhost:
        type: bool
        description:
        - Whether clients can request certificates for V(localhost) as one of the requested common names.
      allowed_domains:
        type: list
        elements: str
        description:
          - The domains for which this role can issue certificates.
      allowed_domains_template:
        type: bool
        description:
          - Whether the O(allowed_domains) list can include templates.
      allow_bare_domains:
        type: bool
        description:
          - Whether clients can request certificates matching the value of the actual domains themselves.
      allow_subdomains:
        type: bool
        description:
          - Whether clients can request certificates with CNs that are subdomains of the CNs allowed by
            the other role options. This includes wildcard subdomains.
      allow_glob_domains:
        type: bool
        description:
          - Allows names specified in O(allowed_domains) to contain glob patterns (e.g. V(ftp*.example.com))
      allow_wildcard_certificates:
        type: bool
        description:
          - Whether clients can request wildcard certificates.
      allow_any_name:
        type: bool
        description:
          - Whether clients can request a certificate CN that is not in the O(allowed_domains) list.
      enforce_hostnames:
        type: bool
        description:
          - Whether only valid host names are allowed for CNs, DNS SANs, and the host part of email
            addresses.
      allow_ip_sans:
        type: bool
        description:
          - Whether clients can request IP Subject Alternative Names (SANs).
      allowed_uri_sans:
        type: list
        elements: str
        description:
          - The list of allowed URI Subject Alternative Names (SANs).
      allowed_uri_sans_template:
        type: bool
        description:
          - Whether the O(allowed_uri_sans) list can use templates.
      allowed_other_sans:
        type: list
        elements: str
        description:
          - Defines allowed custom OID/UTF8-string SANs
      server_flag:
        type: bool
        description:
          - Whether certificates issued are flagged for server use.
      client_flag:
        type: bool
        description:
          - Whether certificates issued are flagged for client use.
      code_signing_flag:
        type: bool
        description:
          - Whether certificates issued are flagged for code signing use.
      email_protection_flag:
        type: bool
        description:
          - Whether certificates issued are flagged for email protection use.
      key_type:
        type: str
        description:
          - The type of key to generate for generated private keys and the type of key expected for
            submitted CSRs.
      key_bits:
        type: int
        description:
          - The number of bits to use for generated keys.
      signature_bits:
        type: int
        description:
          - The signature algorithm bit length for the signed certificates.
      use_pss:
        type: bool
        description:
          - Whether to use the Probabilistic Signature Scheme (PSS) for RSA keys.
      key_usage:
        type: list
        elements: str
        description:
          - The list of allowed key usage constraints on issued certificates.
      ext_key_usage:
        type: list
        elements: str
        description:
          - The list of allowed extended key usage constraints on issued certificates.
      ext_key_usage_oids:
        type: list
        elements: str
        description:
          - The list of extended key usage oids.
      use_csr_common_name:
        type: bool
        description:
          - Whether the CSR common name is used, when signing a CSR.
      use_csr_sans:
        type: bool
        description:
          - Whether the CSR Subject Alternative Names (SANs) are used, when signing a CSR.
      ou:
        type: list
        elements: str
        description:
          - The Organizational Unit (OU) values to include in issued/signed certificates.
      organization:
        type: list
        elements: str
        description:
          - The Organization (O) values to include in issued/signed certificates.
      country:
        type: list
        elements: str
        description:
          - The Country (C) values to include in issued/signed certificates.
      locality:
        type: list
        elements: str
        description:
          - The Locality (L) values to include in issued/signed certificates.
      province:
        type: list
        elements: str
        description:
          - The Province or State (ST) values to include in issued/signed certificates.
      street_address:
        type: list
        elements: str
        description:
          - The Street Address values to include in issued/signed certificates.
      postal_code:
        type: list
        elements: str
        description:
          - The Postal Code values to include in issued/signed certificates.
      generate_lease:
        type: bool
        description:
          - Whether certificates issued/signed against this role will have Vault leases attached to them.
      no_store:
        type: bool
        description:
          - Whether certificates issued/signed against this role should be stored in the storage backend.
      require_cn:
        type: bool
        description:
          - Whether certificate signing requests (CSRs) must include a common name (CN).
      policy_identifiers:
        type: list
        elements: str
        description:
          - The list of policy OIDs.
      basic_constraints_valid_for_non_ca:
        type: bool
        description:
          - Whether to mark Basic Constraints valid when issuing non-CA certificates.
      not_before_duration:
        type: str
        description:
          - The duration by which to backdate the NotBefore property.
      not_after:
        type: str
        description:
          - This must be in UTC C(YYYY-MM-ddTHH:MM:SSZ) format.
      allowed_user_ids:
        type: list
        elements: str
        description:
          - The list of allowed user IDs.
